// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kafka_source.proto

package flink.examples.datastream._04._3_4.protobuf;

public final class KafkaSourceClass {
  private KafkaSourceClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flink_KafkaSourceModel_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flink_KafkaSourceModel_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flink_KafkaSourceModel_SiMapEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flink_KafkaSourceModel_SiMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\022kafka_source.proto\022\005flink\"\221\001\n\020KafkaSou" +
      "rceModel\022\014\n\004name\030\001 \001(\t\022\r\n\005names\030\002 \003(\t\0222\n" +
      "\006si_map\030\007 \003(\0132\".flink.KafkaSourceModel.S" +
      "iMapEntry\032,\n\nSiMapEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005" +
      "value\030\002 \001(\005:\0028\001BA\n+flink.examples.datast" +
      "ream._04._3_4.protobufB\020KafkaSourceClass" +
      "P\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_flink_KafkaSourceModel_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_flink_KafkaSourceModel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flink_KafkaSourceModel_descriptor,
        new String[] { "Name", "Names", "SiMap", });
    internal_static_flink_KafkaSourceModel_SiMapEntry_descriptor =
      internal_static_flink_KafkaSourceModel_descriptor.getNestedTypes().get(0);
    internal_static_flink_KafkaSourceModel_SiMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flink_KafkaSourceModel_SiMapEntry_descriptor,
        new String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
